#+name: card.h#include
#+BEGIN_SRC c :exports none
// src/card.h
# include <string.h>
#+END_SRC

#+name: card.h#e_Suit
#+BEGIN_SRC c :exports none
enum e_Suit {CLUB=1,DIAMOND,HEART,SPADE};
enum e_Suit card_suit_new_from_string(char *);
#+END_SRC

#+name: card.h#e_No
#+BEGIN_SRC c :exports none
enum e_No { TWO=2, THREE, FOUR, FIVE,
	    SIX, SEVEN, EIGHT, NINE, TEN,
	    JACK, QUEEN, KING, ACE};
enum e_No card_no_new_from_string(char *);
#+END_SRC

#+name: card.h#card_struct 
#+BEGIN_SRC c :exports none
struct _Card {
  enum e_Suit suit;
  enum e_No no;
};
#+END_SRC

#+name: card.h#Card
#+BEGIN_SRC c :exports none
typedef struct _Card Card;

enum e_Suit card_suit(Card);
enum e_No card_no(Card);
Card card_new(enum e_Suit, enum e_No);
#+END_SRC

#+name: card.h#card_to_string
#+BEGIN_SRC c :exports none
char *card_to_string(Card);
#+END_SRC

#+name: card.h-suit_new
#+BEGIN_SRC c :exports none :noweb yes
<<card.h#include>>

<<card.h#e_Suit>>
#+END_SRC


#+name: card.h-no_new
#+BEGIN_SRC c :exports none :noweb yes
<<card.h#include>>

<<card.h#e_Suit>>

<<card.h#e_No>>

#+END_SRC

#+name: card.h-card_new
#+BEGIN_SRC c  :exports none :noweb yes
<<card.h#include>>

<<card.h#e_Suit>>

<<card.h#e_No>>

<<card.h#card_struct>>

<<card.h#Card>>
#+END_SRC

#+name: card.h-card_to_string
#+BEGIN_SRC c  :exports none :noweb yes
<<card.h#include>>

<<card.h#e_Suit>>

<<card.h#e_No>>

<<card.h#card_struct>>

<<card.h#Card>>

<<card.h#card_to_string>>
#+END_SRC

#+name:card.h#cards_sort
#+BEGIN_SRC C :exports none
Card *cards_sort(Card *, int);
#+END_SRC

#+name:card.h#card_compare
#+BEGIN_SRC C :exports none
int card_compare(Card, Card);
#+END_SRC

#+name: card.h-cards_sort
#+BEGIN_SRC c  :exports none :noweb yes
<<card.h#include>>

<<card.h#e_Suit>>

<<card.h#e_No>>

<<card.h#card_struct>>

<<card.h#Card>>

<<card.h#card_to_string>>

<<card.h#card_compare>>
<<card.h#cards_sort>>
#+END_SRC
