#+name: test_cards.c#include
#+BEGIN_SRC c :exports none
// test/test_cards.c
# include <cutter.h>
# include <card.h>
#+END_SRC
#+name: test_cards.c#test_setup
#+BEGIN_SRC C
  Card test_cards[5];
  {
    test_cards[0] = card_new(SPADE,ACE);
    test_cards[1] = card_new(HEART,ACE);
    test_cards[2] = card_new(CLUB,2);
    test_cards[3] = card_new(DIAMOND,10);
    test_cards[4] = card_new(SPADE,2);
  }
#+END_SRC

#+name: test_cards.c#expected_setup
#+BEGIN_SRC C
  Card expected_cards[5];
  {
    expected_cards[4] = card_new(SPADE,ACE);
    expected_cards[3] = card_new(HEART,ACE);
    expected_cards[2] = card_new(DIAMOND,10);
    expected_cards[1] = card_new(SPADE,2);
    expected_cards[0] = card_new(CLUB,2);
  }
#+END_SRC

#+name: test_cards.c
#+BEGIN_SRC c :exports none
// test/test_cards.c
void
test_cards_sort(void)
{
<<test_cards.c#test_setup>>

<<test_cards.c#expected_setup>>

  Card *cards, *sorted_cards;
  {
    sorted_cards = cards_sort(cards, 5);
  }

  for (i=0; i<5; i++)
    {
      cut_assert(card_compare(expected_cards[i], sorted_cards[i])==0 );
    }
}
#+END_SRC
